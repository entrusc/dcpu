/*
 * Copyright (C) 2012 Florian Frankenberger
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package de.darkblue.dcpu.view;

import de.darkblue.dcpu.parser.instructions.Operation;
import de.darkblue.dcpu.parser.instructions.Word;
import de.darkblue.dcpu.parser.instructions.WordChangeListener;

/**
 *
 * @author Florian Frankenberger
 */
public class MemoryCellInformationPanel extends javax.swing.JPanel implements WordChangeListener {

    private String memoryCellId;
    private Word memoryCell;
    
    /**
     * Creates new form MemoryCellInformationPanel
     */
    public MemoryCellInformationPanel() {
        initComponents();
    }

    public void setMemoryCell(String memoryCellId, Word memoryCell) {
        if (this.memoryCell != null) {
            this.memoryCell.removeListener(this);
        }
        this.memoryCellId = memoryCellId;
        this.memoryCell = memoryCell;
        this.memoryCell.registerListener(this);
        this.onValueChanged(memoryCell);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        memoryCellIdLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        decimalLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        hexLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        binLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        opcodeLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        operandBLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        operandALabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(41, 49, 51));
        setForeground(new java.awt.Color(193, 203, 194));

        jLabel1.setForeground(new java.awt.Color(134, 154, 137));
        jLabel1.setText("Memory Cell:");

        memoryCellIdLabel.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        memoryCellIdLabel.setForeground(new java.awt.Color(193, 203, 194));
        memoryCellIdLabel.setText("?");

        jLabel3.setForeground(new java.awt.Color(134, 154, 137));
        jLabel3.setText("Decimal:");

        decimalLabel.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        decimalLabel.setForeground(new java.awt.Color(193, 203, 194));
        decimalLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        decimalLabel.setText("65555");

        jLabel5.setForeground(new java.awt.Color(134, 154, 137));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Hex:");

        hexLabel.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        hexLabel.setForeground(new java.awt.Color(193, 203, 194));
        hexLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hexLabel.setText("0xFFFF");

        jLabel7.setForeground(new java.awt.Color(134, 154, 137));
        jLabel7.setText("Bin:");

        binLabel.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        binLabel.setForeground(new java.awt.Color(193, 203, 194));
        binLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        binLabel.setText("0b0000000000000000");

        jLabel9.setForeground(new java.awt.Color(134, 154, 137));
        jLabel9.setText("Opcode:");

        opcodeLabel.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        opcodeLabel.setForeground(new java.awt.Color(193, 203, 194));
        opcodeLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        opcodeLabel.setText("0x0000");

        jLabel10.setForeground(new java.awt.Color(134, 154, 137));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("OperandB:");

        operandBLabel.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        operandBLabel.setForeground(new java.awt.Color(193, 203, 194));
        operandBLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        operandBLabel.setText("0x00");

        jLabel11.setForeground(new java.awt.Color(134, 154, 137));
        jLabel11.setText("OperandA:");

        operandALabel.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
        operandALabel.setForeground(new java.awt.Color(193, 203, 194));
        operandALabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        operandALabel.setText("0x00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(opcodeLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(decimalLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(operandBLabel)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11)))
                            .addComponent(hexLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(operandALabel)
                            .addComponent(binLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(memoryCellIdLabel)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {decimalLabel, opcodeLabel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hexLabel, operandBLabel});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(memoryCellIdLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(decimalLabel)
                    .addComponent(jLabel5)
                    .addComponent(hexLabel)
                    .addComponent(jLabel7)
                    .addComponent(binLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(opcodeLabel)
                    .addComponent(jLabel10)
                    .addComponent(operandBLabel)
                    .addComponent(jLabel11)
                    .addComponent(operandALabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel binLabel;
    private javax.swing.JLabel decimalLabel;
    private javax.swing.JLabel hexLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel memoryCellIdLabel;
    private javax.swing.JLabel opcodeLabel;
    private javax.swing.JLabel operandALabel;
    private javax.swing.JLabel operandBLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onValueChanged(Word word) {
        this.memoryCellIdLabel.setText(memoryCellId);
        
        this.decimalLabel.setText(String.format("%05d", word.unsignedIntValue()));
        this.hexLabel.setText("0x" + word.toHexString());
        this.binLabel.setText("0b" + word.toBinaryString());
        
        final Operation operand = Operation.getByOpcode(word.getOperationCode(), 
                word.hasTwoOperandsAsInstruction() ? 2 : 1);
        this.opcodeLabel.setText(operand != null 
                ? operand.name() 
                : String.format("0x%02x", word.getOperationCode()));
        
        this.operandBLabel.setText(String.format("0x%02x", word.getOperandB()));
        this.operandALabel.setText(String.format("0x%02x", word.getOperandA()));
    }
}
